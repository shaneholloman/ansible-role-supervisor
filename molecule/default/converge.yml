---
- name: Converge
  hosts: all
  become: true

  environment:
    PATH: "/usr/local/bin:{{ ansible_env.PATH }}"

  vars:
    supervisor_user: root
    supervisor_password: fizzbuzz

  pre_tasks:
    - name: Update apt cache (Debian).
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 600
      when: ansible_os_family == 'Debian'

    # Install curl for test purposes.
    - name: Remove curl-minimal package before full curl install.
      ansible.builtin.package:
        name: curl-minimal
        state: absent

    - name: Install curl for testing purposes.
      ansible.builtin.package:
        name: curl
        state: present

    # Install Apache for test purposes.
    - block:
        - name: Install Apache (RedHat).
          ansible.builtin.package:
            name: httpd
            state: present

        - name: Ensure Apache is not running (RedHat).
          ansible.builtin.service:
            name: httpd
            state: stopped
            enabled: no

      when: ansible_os_family == 'RedHat'

    - block:
        - name: Install Apache (Debian).
          ansible.builtin.package:
            name: apache2
            state: present

        - name: Ensure Apache is not running (Debian).
          ansible.builtin.service:
            name: apache2
            state: stopped
            enabled: no

      when: ansible_os_family == 'Debian'

    - name: Create a test HTML file to load.
      ansible.builtin.copy:
        content: "<html><head><title>Test</title></head><body>Test.</body></html>"
        dest: /var/www/html/index.html
        force: false
        group: root
        owner: root
        mode: 0644

    # Add Apache to supervisor_programs.
    - name: Set Apache start command (Debian).
      ansible.builtin.set_fact:
        apache_start_command: apache2ctl -DFOREGROUND
      when: ansible_os_family == 'Debian'

    - name: Set Apache start command (RedHat).
      ansible.builtin.set_fact:
        apache_start_command: httpd -DFOREGROUND
      when: ansible_os_family == 'RedHat'

    - name: Add Apache to supervisor_programs.
      ansible.builtin.set_fact:
        supervisor_programs:
          - name: 'apache'
            command: "{{ apache_start_command }}"
            state: present
            configuration: |
              autostart=true
              autorestart=true
              startretries=1
              startsecs=1
              redirect_stderr=true
              stderr_logfile=/var/log/apache-err.log
              stdout_logfile=/var/log/apache-out.log
              user=root
              killasgroup=true
              stopasgroup=true

  roles:
    - role: shaneholloman.pip
    - role: shaneholloman.supervisor

  tasks:
    - name: Trigger handlers so supervisor runs everything it should run.
      ansible.builtin.meta: flush_handlers

  post_tasks:
    - name: Wait for Apache to come up (if it's going to do so...).
      ansible.builtin.wait_for:
        port: 80
        delay: 2

    - name: Verify Apache is responding on port 80.
      ansible.builtin.uri:
        url: http://127.0.0.1/
        method: GET
        status_code: 200

    - name: Verify supervisorctl is available.
      ansible.builtin.command: supervisorctl --help
      changed_when: false

    - name: Validate supervisorctl works through the default UNIX socket.
      supervisorctl:
        name: apache
        state: restarted
        username: "{{ supervisor_user }}"
        password: "{{ supervisor_password }}"
      changed_when: false

    - name: Validate supervisorctl works with unix socket
      ansible.builtin.command: supervisorctl status
      changed_when: false
